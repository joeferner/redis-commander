<div id="app-container">
  <div>
    <div id="sideBar">
      <div id="keyTreeActions">
        <button class="btn btn-success btn-mini" onclick="refreshTree()"><b class="icon-refresh icon-white"></b> Refresh</button>
        <button class="btn btn-mini" data-toggle="modal" href="#redisCommandsModal"><b class="icon-info-sign"></b> Commands</button>
        <div class="btn-group">
          <a class="btn btn-mini dropdown-toggle" data-toggle="dropdown" href="#">
            <b class="icon-wrench"></b>
            More...
            <span class="caret"></span>
          </a>
          <ul class="dropdown-menu">
            <li><a data-toggle="modal" id="redisImportData" href="#"><b class="icon-arrow-right"></b><b class="icon-th"></b> Import</a></li>
            <li><a data-toggle="modal" id="redisExportData" href="#"><b class="icon-arrow-left"></b><b class="icon-th"></b> Export</a></li>
            <li><a data-toggle="modal" href="#addServerModal"><b class="icon-plus-sign"></b> Add Server</a></li>
          </ul>
        </div>
      </div>
      <div id="keyTree"></div>
      <div id="sidebarResize"></div>
    </div>

    <div id="body">

    </div>
  </div>
</div>
<div id="commandLineContainer">
  <div id="commandLineBorder" style="border-top: 1px solid #ddd;padding-bottom: 5px;"></div>
  <div class="btn-group" data-toggle="buttons-radio" style="padding-bottom: 5px; padding-left: 5px" id="connectionsBar">
  </div>
  <div style="border-top: 1px solid #ddd;padding-bottom: 5px;"></div>
  <i id="lockCommandButton" class="icon-lock disabled"></i>

  <div id="commandLineOutput"></div>
  <label id="selectedConnectionLabel">Current Server:</label>
  <input id="selectedConnection" type="hidden">

  <div id="commandLine"></div>
</div>

<!-- COMMANDS MODAL -->
<div id="redisCommandsModal" class="modal hide fade">
  <a id="redisCommandsExternal" target="_blank" href="https://redis.io/commands">Open in new window</a>
  <button id="redisCommandsClose" type="button" class="close" data-dismiss="modal">×</button>
  <div class="modal-body">
    <iframe seamless="seamless" src="https://redis.io/commands">test</iframe>
  </div>
</div>
<div class="modal hide fade" id="addServerModal">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">×</button>
    <h3>Add a connection</h3>
  </div>
  <div class="modal-body">
    <div class="container" id="addServerContainer">
      <form action="login" method="POST" id="addServerForm">
        <label>Name</label>
        <input type="text" name="label" id="label" value="">
        <label>Hostname</label>
        <input type="text" name="hostname" id="hostname" value="localhost">
        <label>Port or Unix Socket Path</label>
        <input type="text" name="port" id="port" value="6379">
        <label>Password</label>
        <input type="password" name="password" id="password" value="">
        <label>Database Index</label>
        <input type="number" name="dbIndex" id="dbIndex" value="0">
        <br>
      </form>
    </div>
  </div>
  <div class="modal-footer">
    <a href="#" class="btn" data-dismiss="modal">Close</a>
    <a type="submit" onclick="addServer()" class="btn btn-primary">Connect...</a>
  </div>
</div>
<!-- /COMMANDS MODAL -->

<script type="text/javascript">
  var setConnection = function (connectionId) {
    $('#selectedConnectionLabel').text("Current Instance: " + connectionId);
    $('#selectedConnection').val(connectionId);
  };
  $(function () {
    $(window).bind('beforeunload', () => {
      sessionStorage.clear();
    });
    $.ajaxSetup({
      beforeSend: function(jqXHR) {
        var redisCommanderBearerToken = sessionStorage.getItem('redisCommanderBearerToken');
        if (redisCommanderBearerToken) {
          jqXHR.setRequestHeader('Authorization', 'Bearer ' + redisCommanderBearerToken);
        }
      }
    });
    function refreshToken() {
      $.post('signin', {}, function (data, status) {
        if (status != 'success') {
          console.error("refresh token connection problem");
          return;
        }
        if (!data || !data.ok) {
          sessionStorage.removeItem('redisCommanderBearerToken');
          sessionStorage.removeItem('redisCommanderQueryToken');
          $('#signinModal').modal({
            backdrop: 'static',
            keyboard: false,
            show: true
          });
          return;
        }
        var oldToken = sessionStorage.getItem('redisCommanderBearerToken');
        sessionStorage.setItem('redisCommanderBearerToken', data.bearerToken);
        sessionStorage.setItem('redisCommanderQueryToken', data.queryToken);
        if (!oldToken) {
          $(window).unbind('beforeunload'); // not sure if necessary
          location.reload();
        }
        setTimeout(refreshToken, 20e3);
      })
      .fail(function(err) {
        console.error("Signin network error", err);
        setTimeout(refreshToken, 5e3);
      })
    }
    refreshToken();
    if (!sessionStorage.getItem('redisCommanderBearerToken')) {
      return;
    }
    $.get('connections', function(data, status) {
      if (status !== 'success') {
        console.error("Failed to fetch connections");
        return;
      }
      $('#connectionsBar').html(new EJS({ url: 'templates/connectionsBar.ejs' }).render(data));

      $('#selectedConnectionLabel').text("Current Instance: " + $('#firstConnection').val());
      $('#selectedConnection').val($('#firstConnection').val());

      loadTree();
      loadConfig(function () {
        loadCommandLine();
        setupResizeEvents();
        setupCommandLock();
        setupCLIKeyEvents();
        $('.container').removeClass('container');
        $('html').css('overflow-y', 'hidden');
        $('#pageIndex').live('keydown', function (e) {
          if (e.keyCode == 13) {
            $('#gotoIndexButton').click();
          }
        });
        $('#redisCommandsModal').modal({
          backdrop: false,
          keyboard: false,
          show: false
        });
      });
    })
    .fail(err => {
      console.error("Failed to fetch connections", err);
    });
    
    
  });
</script>
